x-ticket-base: &ticket_base
  build: .
  env_file:
    - ./.env
  environment:
    DJANGO_SETTINGS_MODULE: core.settings.prod
    GRAPH_DISABLED: "1"
  volumes:
    - static_volume:/home/app/web/static
    - media_volume:/home/app/web/media

services:
  db:
    image: postgres:17
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  # FÃ¼hrt Migrationen & collectstatic einmal aus und beendet sich.
  migrate:
    <<: *ticket_base
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput
      "

  web:
    <<: *ticket_base
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command:
      - gunicorn
      - core.wsgi
      - --bind
      - 0.0.0.0:8000
      - --worker-tmp-dir
      - /dev/shm
      - --workers
      - "4"
      - --threads
      - "4"
      - --worker-class
      - gthread
      - --access-logfile
      - "-"
      - --log-level
      - info
    expose:
      - "8000"

  nginx:
    build: ./nginx
    depends_on:
      web:
        condition: service_started
      daphne:
        condition: service_started
    ports:
      - "127.0.0.1:1337:80"
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media

  huey:
    <<: *ticket_base
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: >
      bash -c "python manage.py run_huey"

  background_tasks:
    <<: *ticket_base
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command: >
      bash -c "python manage.py process_tasks"

  daphne:
    <<: *ticket_base
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    command:  daphne -b 0.0.0.0 -p 8001 core.asgi:application
    expose:
      - "8001"

  redis:
    image: redis:6-alpine
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
