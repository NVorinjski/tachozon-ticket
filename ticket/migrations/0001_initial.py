# Generated by Django 3.2.9 on 2022-01-21 18:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('labels', models.TextField(verbose_name='Etiketten')),
                ('data', models.TextField(verbose_name='Daten')),
            ],
            options={
                'verbose_name': 'Analyse',
                'verbose_name_plural': 'Analyse',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('text', models.TextField(blank=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('author', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_comment', to='ticket.comment', verbose_name='Oberkommentar')),
            ],
            options={
                'verbose_name': 'Kommentar',
                'verbose_name_plural': 'Kommentare',
            },
        ),
        migrations.CreateModel(
            name='ProblemSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Name der Quelle')),
                ('slug', models.SlugField(default='')),
                ('breadcrumb', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reihenfolge')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='problem_source', to='ticket.problemsource', verbose_name='Oberquelle')),
            ],
            options={
                'verbose_name': 'Problemquelle',
                'verbose_name_plural': 'Problemquellen',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titel')),
                ('created_date', models.DateTimeField(verbose_name='Erstellt am')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Fälligkeitsdatum')),
                ('completed', models.BooleanField(default=False, verbose_name='Erledigt')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Erledigt am')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Zuletzt bearbeitet am')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notiz')),
                ('priority', models.PositiveIntegerField(default=0, verbose_name='Priorität')),
                ('paused_until', models.DateTimeField(blank=True, null=True, verbose_name='Pausiert bis')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_assigned_to', to=settings.AUTH_USER_MODEL, verbose_name='Zugewiesen an')),
                ('created_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('followers', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='Gefolgt von')),
                ('modified_by', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, on_update=True, to=settings.AUTH_USER_MODEL, verbose_name='Zuletzt bearbeitet von')),
                ('problem_source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='ticket.problemsource', verbose_name='Problemquelle')),
            ],
            options={
                'ordering': ['priority', 'created_date'],
            },
        ),
        migrations.CreateModel(
            name='TicketEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('new', 'New'), ('edit', 'Edit'), ('comment', 'Comment'), ('reply', 'Reply'), ('close', 'Close'), ('reopen', 'Reopen'), ('new_attachment', 'New Attachment'), ('assigned', 'Assigned'), ('access_allowed', 'Access Allowed')], max_length=20, verbose_name='Art')),
                ('timestamp', models.DateTimeField(verbose_name='Zeitstempel')),
                ('seen', models.BooleanField(default=False, verbose_name='Gesehen?')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Intern?')),
                ('is_automatic', models.BooleanField(default=False, verbose_name='Vom System erstellt?')),
                ('author', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ticket.comment', verbose_name='Kommentar')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_user', to=settings.AUTH_USER_MODEL, verbose_name='Zielbenutzer')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket')),
                ('user_to_notify', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer zu benachrichtigen')),
            ],
            options={
                'verbose_name': 'Benachrichtigung',
                'verbose_name_plural': 'Benachrichtigungen',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket', verbose_name='Ticket'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Dateiname')),
                ('file', models.FileField(upload_to='ticket/attachments/', verbose_name='Datei')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Anhang',
                'verbose_name_plural': 'Anhänge',
            },
        ),
    ]
